{"version":3,"sources":["components/styled/Label.tsx","components/styled/Input.tsx","components/styled/Select.tsx","components/styled/TableRow.tsx","components/styled/TableData.tsx","components/Option.tsx","components/styled/Table.tsx","components/styled/TableBody.tsx","components/OptionSelector.tsx","examples/examples.ts","components/styled/TextArea.tsx","components/styled/Button.tsx","components/GraphInput.tsx","components/styled/Title.tsx","components/styled/Container.tsx","components/styled/Graphviz.tsx","App.tsx","index.tsx"],"names":["Label","styled","label","_templateObject","Input","input","Input_templateObject","Select","select","Select_templateObject","TableRow","tr","TableRow_templateObject","TableData","td","TableData_templateObject","Option","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getInputElement","props","type","react_default","a","createElement","defaultChecked","default","onChange","event","onOptionUpdate","name","target","checked","defaultValue","value","opts","values","forEach","index","push","key","inherits","createClass","replace","str","toUpperCase","React","Component","Table","table","Table_templateObject","TableBody","tbody","TableBody_templateObject","OptionsSelector","items","options","option","Option_Option","examples","simple_graph","simple_directed_graph","TextArea","textarea","attrs","rows","TextArea_templateObject","Button","button","Button_templateObject","GraphInput","selectExample","dot","setState","updateGraph","state","autoUpdate","onClick","read","onUpdate","error","err","message","_this2","entries","_ref","_ref2","slicedToArray","split","map","charAt","slice","join","Container","fluid","Row","style","color","Title","h1","Title_templateObject","StyledContainer","Container_templateObject","StyledGraphviz","Graphviz","Graphviz_templateObject","defaults","height","width","fit","zoom","scale","tweenPrecision","engine","App","graphOptions","objectSpread","Col","sm","GraphInput_GraphInput","OptionSelector_OptionsSelector","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.f1399ccc.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Label = styled.label``;","import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Select = styled.select`\r\n`;","import styled from 'styled-components';\r\n\r\nexport const TableRow = styled.tr``;","import styled from 'styled-components';\r\n\r\nexport const TableData = styled.td``;","import React from \"react\";\r\nimport { Label } from \"./styled/Label\";\r\nimport { Input } from \"./styled/Input\";\r\nimport { Select } from \"./styled/Select\";\r\nimport { TableRow } from \"./styled/TableRow\";\r\nimport { TableData } from \"./styled/TableData\";\r\n\r\nexport class Option extends React.Component<OptionProps, any> {\r\n\r\n  public render() {\r\n    return (\r\n      <TableRow>\r\n        <TableData>\r\n          <Label>{\r\n            this.props.name\r\n              .replace(/([A-Z])/g, ' $1')\r\n              .replace(/^./, (str) => str.toUpperCase())\r\n          }</Label>\r\n        </TableData>\r\n        <TableData>\r\n          {this.getInputElement()}\r\n        </TableData>\r\n      </TableRow>\r\n    );\r\n  }\r\n\r\n  private getInputElement = () => {\r\n    switch (this.props.type) {\r\n      case 'boolean':\r\n        return (\r\n          <Input\r\n            type=\"checkbox\"\r\n            defaultChecked={this.props.default}\r\n            onChange={\r\n              (event: any) => this.props.onOptionUpdate(this.props.name, event.target.checked)\r\n            }\r\n          />\r\n        );\r\n      case 'number':\r\n      case 'input':\r\n        return (\r\n          <Input\r\n            type={this.props.type}\r\n            defaultValue={this.props.default}\r\n            onChange={\r\n              (event: any) => this.props.onOptionUpdate(this.props.name, event.target.value)\r\n            }\r\n          />\r\n        );\r\n      case 'list':\r\n        const opts: JSX.Element[] = [];\r\n        (this.props.values || []).forEach((value, index) => {\r\n          opts.push(\r\n            <option key={index} value={value}>{value}</option>\r\n          );\r\n        });\r\n        return (\r\n          <Select\r\n            defaultValue={this.props.default}\r\n            onChange={(event: any) => this.props.onOptionUpdate(this.props.name, event.target.value)}>\r\n            {opts}\r\n          </Select>\r\n        );\r\n      default:\r\n        return <div />\r\n    }\r\n  }\r\n}\r\n\r\nexport interface OptionProps {\r\n  index: number,\r\n  name: string,\r\n  type: 'boolean' | 'number' | 'input' | 'list' | 'range',\r\n  values?: string[],\r\n  default?: any,\r\n  onOptionUpdate: (name: string, value: any) => void,\r\n}","import styled from 'styled-components';\r\n\r\nexport const Table = styled.table``;","import styled from 'styled-components';\r\n\r\nexport const TableBody = styled.tbody``;","import React from \"react\";\r\nimport { Option } from \"./Option\";\r\nimport { Table } from \"./styled/Table\";\r\nimport { TableBody } from \"./styled/TableBody\";\r\nimport { TableRow } from \"./styled/TableRow\";\r\n\r\nexport class OptionsSelector extends React.Component<OptionsSelectorProps, any> {\r\n\r\n  public render() {\r\n    const items: JSX.Element[] = [];\r\n    this.props.options.forEach((option, index) => {\r\n\r\n      items.push(\r\n        <Option\r\n          index={index}\r\n          key={index}\r\n          name={option.name}\r\n          type={option.type}\r\n          values={option.values}\r\n          default={option.default}\r\n          onOptionUpdate={this.props.onOptionUpdate} />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Table >\r\n        <TableBody>\r\n          {items}\r\n        </TableBody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nexport interface OptionsSelectorProps {\r\n  options: IOption[],\r\n  onOptionUpdate: (name: string, value: any) => void,\r\n}\r\n\r\nexport interface IOption {\r\n  name: string,\r\n  type: 'boolean' | 'number' | 'input' | 'list',\r\n  values?: string[],\r\n  default?: any,\r\n}","export const examples = {\r\n    simple_graph:\r\n        `graph {\r\n    a -- b\r\n    a -- c\r\n    b -- d\r\n    c -- d\r\n}`,\r\n    simple_directed_graph:\r\n        `digraph {\r\n    rankdir=LR\r\n    a -> b\r\n    b -> c\r\n    b -> d\r\n    c -> e\r\n    d -> e\r\n    e -> a\r\n}`,\r\n};","import styled from 'styled-components';\r\n\r\nexport const TextArea = styled.textarea.attrs({\r\n    rows: 15\r\n})`\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n`;\r\n","import React from \"react\";\r\nimport { read } from 'graphlib-dot';\r\nimport { examples } from \"../examples/examples\";\r\nimport { Row, Container } from \"react-bootstrap\";\r\nimport { TextArea } from \"./styled/TextArea\";\r\nimport { Select } from \"./styled/Select\";\r\nimport { Input } from \"./styled/Input\";\r\nimport { Button } from \"./styled/Button\";\r\nimport { Label } from \"./styled/Label\";\r\n\r\nexport class GraphInput extends React.Component<GraphInputProps, GraphInputState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      autoUpdate: false,\r\n      dot: this.props.dot || '',\r\n      error: '',\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const options: JSX.Element[] = [];\r\n    options.push(\r\n      <option key='0' value=''>--- Examples ---</option>\r\n    );\r\n    Object.entries(examples).forEach(([key, value], index) => {\r\n      options.push(\r\n        <option key={index + 1} value={value}>\r\n          {\r\n            key.split('_')\r\n              .map((key) => key.charAt(0).toUpperCase() + key.slice(1))\r\n              .join(' ')\r\n          }\r\n        </option>\r\n      );\r\n    });\r\n    return (\r\n      <Container fluid={true}>\r\n        <Row>\r\n          <TextArea\r\n            value={this.state.dot}\r\n            onChange={this.onChange}\r\n          />\r\n          <div style={{ color: 'red' }}>{this.state.error}</div>\r\n        </Row>\r\n        <Row>\r\n          <Select onChange={this.selectExample}>\r\n            {options}\r\n          </Select>\r\n        </Row>\r\n        <Row>\r\n          <Label>Auto-update? &nbsp;</Label>\r\n          <Input\r\n            type=\"checkbox\"\r\n            onChange={\r\n              (event: any) => {\r\n                this.setState({ autoUpdate: event.target.checked });\r\n              }\r\n            }\r\n          />\r\n        </Row>\r\n        <Row>\r\n          <Button\r\n            onClick={this.onClick}>Update</Button>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  private selectExample = (event: any) => {\r\n    const dot = event.target.value;\r\n    if (dot) {\r\n      this.setState({ dot });\r\n      this.updateGraph(dot);\r\n    }\r\n  }\r\n\r\n  private onChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const dot = event.target.value;\r\n    this.setState({ dot });\r\n    if (this.state.autoUpdate) {\r\n      this.updateGraph(dot);\r\n    }\r\n  }\r\n\r\n  private onClick = () => {\r\n    this.updateGraph(this.state.dot);\r\n  }\r\n\r\n  private updateGraph = (dot: string) => {\r\n    try {\r\n      read(dot);\r\n      this.props.onUpdate(dot);\r\n      this.setState({\r\n        error: ''\r\n      })\r\n    } catch (err) {\r\n      this.setState({\r\n        error: `Parse Error: ${err.message}`,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\ninterface GraphInputState {\r\n  autoUpdate: boolean,\r\n  dot: string,\r\n  error: string,\r\n}\r\n\r\nexport interface GraphInputProps {\r\n  dot?: string,\r\n  onUpdate: (dot: string) => void,\r\n}","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h1`\r\n    text-align: center;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nexport const StyledContainer = styled(Container)`\r\n`;","import styled from 'styled-components';\r\nimport { Graphviz } from 'graphviz-react';\r\n\r\nexport const StyledGraphviz = styled(Graphviz)`\r\n`;","import React from 'react';\r\n\r\nimport { OptionsSelector, IOption } from './components/OptionSelector';\r\nimport { GraphInput } from './components/GraphInput';\r\nimport { GraphvizOptions } from 'd3-graphviz';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Title } from './components/styled/Title';\r\nimport { StyledContainer } from './components/styled/Container';\r\nimport { StyledGraphviz } from './components/styled/Graphviz';\r\n\r\nconst defaults: GraphvizOptions = {\r\n  height: 550,\r\n  width: 550,\r\n  fit: true,\r\n  zoom: false,\r\n  scale: 1,\r\n  tweenPrecision: 1,\r\n  engine: 'dot',\r\n};\r\n\r\nconst options: IOption[] = [\r\n  { name: 'useWorker', type: 'boolean' },\r\n  { name: 'engine', type: 'list', values: ['circo', 'dot', 'fdp', 'neato', 'osage', 'patchwork', 'twopi'], default: defaults.engine },\r\n  { name: 'keyMode', type: 'list', values: ['title', 'id', 'tag-index', 'index'] },\r\n  { name: 'fade', type: 'boolean' },\r\n  { name: 'tweenPaths', type: 'boolean' },\r\n  { name: 'tweenShapes', type: 'boolean' },\r\n  { name: 'convertEqualSidedPolygons', type: 'boolean' },\r\n  { name: 'tweenPrecision', type: 'number', default: defaults.tweenPrecision },\r\n  { name: 'growEnteringEdges', type: 'boolean' },\r\n  { name: 'zoom', type: 'boolean', default: defaults.zoom },\r\n  { name: 'width', type: 'number', default: defaults.width },\r\n  { name: 'height', type: 'number', default: defaults.height },\r\n  { name: 'scale', type: 'number', default: defaults.scale },\r\n  { name: 'fit', type: 'boolean', default: defaults.fit },\r\n];\r\n\r\nexport default class App extends React.Component<any, AppState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      dot: 'graph { a }',\r\n      graphOptions: defaults,\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div>\r\n        <Title>Graphviz-React</Title>\r\n        <StyledContainer fluid={true}>\r\n          <Row>\r\n            <Col sm={2}>\r\n              <GraphInput dot={this.state.dot} onUpdate={(dot) => this.setState({ dot })} />\r\n            </Col>\r\n            <Col>\r\n              <OptionsSelector options={options} onOptionUpdate={this.onOptionUpdate} />\r\n            </Col>\r\n            <Col>\r\n              <StyledGraphviz dot={this.state.dot} options={this.state.graphOptions} />\r\n            </Col>\r\n          </Row>\r\n        </StyledContainer>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private onOptionUpdate = (name: string, value: any) => {\r\n    const graphOptions = { ...this.state.graphOptions };\r\n    graphOptions[name] = value;\r\n    this.setState({ graphOptions });\r\n  }\r\n}\r\n\r\ninterface AppState {\r\n  dot: string,\r\n  graphOptions: any,\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}